-- $ProjectHeader: use 0.393 Wed, 16 May 2007 14:10:28 +0200 opti $

model ER


-- enumerations

enum TipoRespuestaAviso {Aceptar,Descartar,Posponer}
enum Composicion {Pastillas,Pomada,Inyeccion,Jarabe,Dosis,Gotas}
enum DiaSemana {Lunes,Martes,Miercoles,Jueves,Viernes,Sabado,Domingo}
enum CondicionesEspeciales {Hour,Periodo,Despertar,Comer,Deporte}
enum AtributoFisico {Temperatura,Presion,Peso}
enum ModoAlarma {SoloVibracion,SoloSonido,SonidoYVibracion,EnSilencio}

--  aux classes
class Image
end

class Banner
end

class Date
attributes
  dia : Integer
  mes : Integer
  ano : Integer
operations
 EsPosteriorA(f : Date) : Boolean = (self.ano >= f.ano or self.ano = f.ano and self.mes >= f.mes or self.ano = f.ano and self.mes = f.mes and self.dia >= f.dia)

 Hoy()
 begin
 -- Esta operacion pondria los parametros de Date a dia de hoy
 self.dia := 9;
 self.mes := 12;
 self.ano :=2015;
 end

 Suma(f : Date) begin self.ano := self.ano+f.ano;  self.mes := self.mes+f.mes; self.dia := self.dia+f.dia;
 if (self.dia>31) then self.dia := self.dia-31; self.mes := self.mes+1;
 end;
 if (self.mes>12) then self.mes := self.mes-12; self.ano := self.ano+1;
 end;
 end

constraints

 inv AnyMayor1900:self.ano > 1900
 inv MesValido: self.mes >= 1 and self.mes <= 12
 inv DiaValido:
 self.dia>=1 and (if(self.mes=1 or self.mes=3 or self.mes=5 or self.mes=7 or self.mes=8 or self.mes=10 or self.mes=12) then self.dia <=31
 else if(self.mes=4 or self.mes=6 or self.mes=9 or self.mes=11) then self.dia <=30
 else self.dia<=29

 endif

 endif
)

end

class Hour
attributes
  hour : Integer
  minute : Integer
  seconds : Integer
constraints
  inv esCorrecta:
    hour > 0 and hour < 24 and
    minute > 0 and minute < 60 and
    seconds > 0 and seconds < 60
end 

-- classes & basic invariants
class Usuario
attributes
  nombre : String
  email : String
  contrassena : String
  ultimaActualizacion : Date
constraints
  inv tieneDefinidosSusAtributos: nombre.isDefined() and email.isDefined() and contrassena.isDefined()
  inv seIdentificaPor: Usuario.allInstances->isUnique(email) and Usuario.allInstances->isUnique(nombre)
end

class Paciente < Usuario
end

class Administrador < Usuario
end

class Supervisor < Usuario
end

associationclass Configuracion 
between
  Usuario[1..*] role leSupervisa
  Supervisor[*] role supervisaA
attributes
  puedeVisualizarTratamiento : Boolean
  puedeVisualizarMedicamentosRestantes : Boolean
  puedeVisualizarVisitasMedicas : Boolean
  puedeVisualizarComentarios : Boolean
  puedeVisualizarDatosPersonales : Boolean
end

class Alergia
attributes
  nombre : String
  descripcion : String
constraints
  inv tieneDefinidosSusAtributos: nombre.isDefined()
  --inv seIdentificaPor: com es fa x indicar q es unica una alergia pel pacient i no pel sistema sencer
end

class DatoFisico
attributes
  tipo : String
  dato : Real
  dia : Date
constraints
  inv tieneDefinidosSusAtributos: tipo.isDefined() and dato.isDefined() and dia.isDefined()
  inv seIdentificaPor: DatoFisico.allInstances->forAll( self2 | self <> self2 implies (self.tipo <> self2.tipo or self.dia <> self2.dia))
end

class Comentario
attributes
  texto : String
  dia : Date
constraints
  inv tieneDefinidosSusAtributos: texto.isDefined() and dia.isDefined()
end

class Sintoma
attributes
  nombre : String
  descripcion : String
  dia : Date
constraints
  inv tieneDefinidosSusAtributos: nombre.isDefined() and dia.isDefined()
end

class DiaDeRegistro
attributes
  DateRegistro : Date
constraints
  inv tieneDefinidosSusAtributos: fechaRegistro.isDefined()
  inv seIdentificaPor: DiaDeRegistro.allInstances()->isUnique(fechaRegistro)
end

class Categoria
attributes
  nombre : String
constraints
  inv tieneDefinidosSusAtributos: nombre.isDefined()
  inv seIdentificaPor: Categoria.allInstances()->isUnique(nombre)
end

class Anuncio
attributes
  identificador : Integer
  nombre : String
  fotografia : String
  banner : Banner
  enlace : String
constraints
  inv tieneDefinidosSusAtributos: identificador.isDefined() and nombre.isDefined() and fotografia.isDefined() and banner.isDefined() and enlace.isDefined()
  inv seIdentificaPor: Anuncio.allInstances()->isUnique(identificador)
end

class Medicamento
attributes
  identificador : Integer
  nombre : String
  infoProspecto : String
  fotografia : Image
  tipoComposicion : Composicion
constraints
  inv tieneDefinidosSusAtributos: identificador.isDefined() and nombre.isDefined() and infoProspecto.isDefined() and fotografia.isDefined() and tipoComposicion.isDefined()
  inv seIdentificaPor: Medicamento.allInstances()->isUnique(identificador)
end

associationclass MedicamentoAdministradoAlPaciente
between
  Medicamento[*]
  DiaDeRegistro[*]
  Paciente[*]
attributes
  identificador : Integer
  fotografia : String
  nombreMedico : String
  avisoNumeroFallos : Integer
  avisoCondicionesEspeciales : CondicionesEspeciales
  haSidoIntroducidoManualmente : Boolean
  cantidadRestante : Integer
constraints
  inv tieneDefinidosSusAtributos: identificador.isDefined() and fotografia.isDefined() and haSidoIntroducidoManualmente.isDefined()
  inv seIdentificaPor: MedicamentoAdministradoAlPaciente.allInstances-> isUnique(identificador)
end

class Periodo
attributes
  fechaInicio : Date
  fechaFin : Date
  diasAdministracion : DiaSemana
  --Com indicar q es un set?
  horaInicioAdministracion : Hour
  horaFinAdministracion : Hour
  cantidadAdministracion : Integer
constraints
  inv tieneDefinidosSusAtributos: fechaInicio.isDefined() and fechaFin.isDefined()
  --inv seIdentificaPor:
  inv tienehoraInicioMenorQueHoraFin : self.horaInicioAdministracion < self.horaFinAdministracion
  inv tieneFechaInicioMenorQueFechaFin : self.fechaInicio < self.fechaFin
end

class Aviso
attributes
  identificador : Integer
  Date : Date
  hora : Hour
  haSidoAceptada : TipoRespuestaAviso
constraints
  inv tieneDefinidosSusAtributos: identificador.isDefined() and Date.isDefined() and hora.isDefined() and haSidoAceptada.isDefined()
  inv seIdentificaPor: Aviso.allInstances->isUnique(identificador)
  --volem q sigui unic x tot el sistema o x usuari?
end

class AvisoAdministracionMedicamento < Aviso
attributes
  modoDeAlarma : ModoAlarma
  tiempoRepeticion : Integer
constraints
  inv tieneDefinidosSusAtributos: modoDeAlarma.isDefined() and tiempoRepeticion.isDefined()
end

class AvisoMedicacionRestante < Aviso
attributes  
  modoDeAlarma : ModoAlarma
  tiempoRepeticion : Integer
constraints
  inv tieneDefinidosSusAtributos: modoDeAlarma.isDefined() and tiempoRepeticion.isDefined()
end

class VisitaMedica
attributes
  hora : Hour
  lugar : String
  medico : String
  dia : Date
constraints
  inv tieneDefinidosSusAtributos: hora.isDefined() and lugar.isDefined() and medico.isDefined() and dia.isDefined()
  --inv seIdentificaPor: hauriem de permetre q pugui tenir registrades dos visites a la mateixa hora i dia? 
  -- SÃ­, menos problemas para nosotros.
end

class AvisoVisitaMedica < Aviso
attributes
  modoDeAlarma : ModoAlarma
  tiempoRepeticion : Integer
constraints
  inv tieneDefinidosSusAtributos: modoDeAlarma.isDefined() and tiempoRepeticion.isDefined()
end

class AvisoIncumplimiento < Aviso
attributes
  modoDeAlarma : ModoAlarma
  tiempoRepeticion : Integer
constraints
  inv tieneDefinidosSusAtributos: modoDeAlarma.isDefined() and tiempoRepeticion.isDefined()
end

class AvisoEspecial < Aviso
attributes
  modoDeAlarma : ModoAlarma
  tiempoRepeticion : Integer
constraints
  inv tieneDefinidosSusAtributos: modoDeAlarma.isDefined() and tiempoRepeticion.isDefined()
end

class PeticionSerSupervisor < Aviso
attributes
  haSidoRespondida : Boolean
constraints
  inv tieneDefinidosSusAtributos: haSidoRespondida.isDefined()
end

-- associations

association PeticionDeSupervision between
  Paciente[*]
  Usuario[*]
end

association Administra between
  Administrador[1..*]
  Anuncio[*]
end

association seMuestraALosMedicamentosCon between
  Anuncio[*]
  Categoria[1..*]
end

association perteneceA between
  Medicamento[*]
  Categoria[1..*]
end

association seAdministraDurante between
  MedicamentoAdministradoAlPaciente[1]
  Periodo[*]
end

association del between
  AvisoAdministracionMedicamento[*]
  MedicamentoAdministradoAlPaciente[1]
end

association delMedicamento between
  AvisoMedicacionRestante[*]
  MedicamentoAdministradoAlPaciente[1]
end

association de between
  AvisoVisitaMedica[*]
  VisitaMedica[1]
end

association porParteDe between
  AvisoIncumplimiento[*]
  Paciente[1]
end

association configuradoPor between
  AvisoEspecial[*]
  Paciente[1]
end

association sufre between
  Paciente[1]
  Sintoma[*]
end

association escribe between
  Paciente[1]
  Comentario[*]
end

association tieneProgramada between
  Paciente[1]
  VisitaMedica[*]
end

association seMide between
  Paciente[1]
  DatoFisico[*]
end

association padece between
  Paciente[1]
  Alergia[*]
end

association seRelacionaCon between
  Comentario[*]
  MedicamentoAdministradoAlPaciente[0..1]
end

--invariants
